{"version":3,"sources":["./src/app/entity/page.ts","./src/app/clazz/page/page.module.ts","./src/app/clazz/page/page.component.ts","./src/app/clazz/page/page.component.html","./src/app/entity/clazz.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["/**\n * 分页.\n * @author 河北工业大学梦云智开发团队\n */\nexport class Page<T> {\n  content: T[];\n  last: boolean;\n  number: number;\n  size: number;\n  numberOfElements: number;\n  first: boolean;\n  totalPages: number;\n\n  constructor(data: {\n    content: T[],\n    last?: boolean,\n    number: number,\n    size: number,\n    numberOfElements: number,\n    first?: boolean,\n    totalPages?: number\n  }) {\n    this.content = data.content;\n    this.number = data.number;\n    this.size = data.size;\n    this.numberOfElements = data.numberOfElements;\n    if (data.last !== undefined) {\n      this.last = data.last;\n    } else {\n      this.last = (this.number + 1) * this.size >= this.numberOfElements ? true : false;\n    }\n\n    if (data.first !== undefined) {\n      this.first = data.first;\n    } else {\n      this.first = this.number === 0 ? true : false;\n    }\n\n    if (data.totalPages !== undefined) {\n      this.totalPages = data.totalPages;\n    } else {\n      // Math.ceil()实现上取整，比如共10条记录，每页6条，则 10 / 6 = 1.x\n      // Math.ceil(1.x) = 2 得出共2页\n      this.totalPages = Math.ceil(this.numberOfElements / this.size);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PageComponent} from './page.component';\n\n@NgModule({\n  declarations: [PageComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [PageComponent]\n})\nexport class PageModule {\n}\n","import {Component, OnInit, Output, EventEmitter, Input} from '@angular/core';\nimport {Page} from '../../entity/page';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.css']\n})\nexport class PageComponent implements OnInit {\n  inputPage: Page<any> = new Page({\n    content: [],\n    number: 0,\n    size: 0,\n    numberOfElements: 0\n  });\n  pages: number[] = [];\n  currentPage = 0;\n\n  @Input()\n  set page(page: Page<any>) {\n    this.inputPage = page;\n    console.log('set page被调用');\n    console.log('当前页', this.inputPage.number);\n    console.log('总页数', this.inputPage.totalPages);\n    // 初始化最大页码，起始页码\n    let maxCount;\n    let begin;\n\n    if (this.inputPage.totalPages > 7) {\n      // 大于7页时，仅显示7页\n      maxCount = 7;\n\n      // 起始页为当前页-3.比如当前页为10，则应该由7页开始\n      begin = this.inputPage.number - 3;\n      if (begin < 0) {\n        // 判断是否越界，可以删除下一行代码查看错误的效果\n        begin = 0;\n      } else if (begin > this.inputPage.totalPages - 7) {\n        // 判断是否越界，可以删除下一行代码查看错误的效果\n        begin = this.inputPage.totalPages - 7;\n      }\n    } else {\n      // 小于等于7页时，使用原算法。页码数为总页数，页码由0开始\n      maxCount = this.inputPage.totalPages;\n      begin = 0;\n    }\n\n    // 生成页数数组\n    this.pages = [];\n    for (let i = 0; i < maxCount; i++, begin++) {\n      this.pages.push(begin);\n    }\n    // 设置当前页\n    this.currentPage = this.inputPage.number;\n  }\n\n  @Output()\n  bePageChange = new EventEmitter<number>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    console.log('page组件调用ngOnInit()方法');\n    console.log('当前页', this.inputPage.number);\n    console.log('总页数', this.inputPage.totalPages);\n  }\n\n  onPage(page: number): void {\n    // 点击页码时弹出该页码\n    this.bePageChange.emit(page);\n  }\n}\n","<nav class=\"row justify-content-md-center\" [ngStyle]=\"{'visibility': inputPage.totalPages > 1 ? 'visible' : 'hidden'}\">\n  <ul class=\"pagination col-md-auto\">\n    <li [ngClass]=\"{disabled: inputPage.first}\" class=\"page-item\"><span class=\"page-link\">上一页</span></li>\n    <li *ngFor=\"let p of pages\" [ngClass]=\"{active: currentPage === p}\" class=\"page-item\">\n      <span class=\"page-link\" (click)=\"onPage(p)\">{{p + 1}}</span>\n    </li>\n    <li [ngClass]=\"{disabled: inputPage.last}\" class=\"page-item\"><span class=\"page-link\">下一页</span></li>\n  </ul>\n</nav>\n","import {Teacher} from './teacher';\n\nexport class Clazz {\n  id: number;\n  name: string;\n  teacher: Teacher;\n\n  constructor(data = {} as {\n    id?: number;\n    name?: string;\n    teacher?: Teacher;\n  }) {\n    this.id = data.id as number;\n    this.name = data.name as string;\n    this.teacher = data.teacher as Teacher;\n  }\n}\n"],"sourceRoot":"webpack:///"}